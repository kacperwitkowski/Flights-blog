import React, { useState } from "react";
import Footer from "../components/Footer";
import Header from "../components/Header";
import { useForm, SubmitHandler } from "react-hook-form";
import Head from "next/head";

interface IFormInput {
  name: string;
  email: string;
  message: string;
}

const Contact = () => {
  const [name, setName] = useState<string>("");
  const [email, setEmail] = useState<string>("");
  const [message, setMessage] = useState<string>("");

  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm<IFormInput>();

  const onSumbit: SubmitHandler<IFormInput> = async () => {
    let data = {
      name,
      email,
      message,
    };

    fetch("/api/contact", {
      method: "POST",
      headers: {
        Accept: "application/json, text/plain, */*",
        "Content-Type": "application/json",
      },
      body: JSON.stringify(data),
    }).then((res) => {
      if (res.status === 200) {
        setName("");
        setEmail("");
      }
    });
  };

  return (
    <div>
      <Head>
        <title>Flights Blog | Contact</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <div className="flex-col md:flex-row flex max-w-7xl mx-auto items-center justify-evenly mb-[5.5rem] bg-slate-200">
        <div className="flex flex-row md:flex-col h-full justify-center items-center md:w-1/4 w-full text-3xl">
          <a
            href="https://github.com/kacperwitkowski?tab=repositories"
            target={"_blank"}
            rel="noreferrer"
            className="p-7"
          >
            <img src="../github.png" alt="github logo" className="w-14 m-1" />
          </a>
          <a
            href="mailto:witkowskik46@gmail.com"
            target={"_blank"}
            rel="noreferrer"
            className="p-7"
          >
            <img src="../gmail.png" alt=" gmail logo" className="w-14 m-1" />
          </a>
          <a
            href="https://www.linkedin.com/in/kacper-witkowski-899279234/"
            target={"_blank"}
            rel="noreferrer"
            className="p-7"
          >
            <img src="../lin.png" alt="linkedin logo" className="w-14 m-1" />
          </a>
        </div>

        <form
          onSubmit={handleSubmit(onSumbit)}
          className="flex flex-col p-5 max-w-2xl w-full md:w-3/4 mb-10"
        >
          <h4 className="text-3xl font-bold">Get in touch!</h4>
          <p className="py-3">
            Please fill out the quick form below and I will respond you with
            lightening speed!
          </p>

          <label className="block mb-5">
            <span className="text-gray-700 ">Name</span>
            <input
              {...register("name", { required: true })}
              className="shadow border rounded py-2 px-3 form-input mt-1 block w-full ring-[#fec144] focus:ring outline-none"
              placeholder="Type your name.."
              type="text"
              onChange={(e) => setName(e.target.value)}
            />
          </label>
          <label className="block mb-5">
            <span className="text-gray-700 ">Email</span>
            <input
              {...register("email", { required: true })}
              className="shadow border rounded py-2 px-3 form-input mt-1 block w-full ring-[#fec144] focus:ring outline-none"
              placeholder="Type your email.."
              type="text"
              onChange={(e) => setEmail(e.target.value)}
            />
          </label>
          <label className="block mb-5">
            <span className="text-gray-700 ">Message</span>
            <textarea
              {...register("message", { required: true })}
              className="shadow border rounded py-2 px-3 form-textarea mt-1 block w-full ring-[#fec144] focus:ring outline-none"
              placeholder="Type your message.."
              rows={8}
              onChange={(e) => setMessage(e.target.value)}
            />
          </label>

          <div className="flex flex-col p-5">
            {errors.name && (
              <span className="text-red-500">The Name Field is required!</span>
            )}
            {errors.email && (
              <span className="text-red-500">The Email Field is required!</span>
            )}
            {errors.message && (
              <span className="text-red-500">
                The Message Field is required!
              </span>
            )}
          </div>
          <input
            type={"submit"}
            className="shadow bg-[#fec144] hover:bg-yellow-200 focus:shadow-outline focus:outline-none text-white px-4 rounded cursor-pointer py-2 font-bold"
          />
        </form>
      </div>
      <Footer />
    </div>
  );
};

export default Contact;
